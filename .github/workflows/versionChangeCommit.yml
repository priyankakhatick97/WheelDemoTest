name: Generate Wheel File and Version Control with commit message

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install setuptools and wheel
        run: |
          pip install setuptools wheel

      - name: Calculate new version
        id: version
        run: |
          # Get the current version from __init__.py
          init_version=$(python -c "import re; f=open('hello_world/__init__.py').read(); print(re.search(r'__version__\s*=\s*[\'\"](.*?)[\'\"]', f).group(1))")
          echo "Current version from __init__.py: $init_version"
          echo "VERSION=$init_version" >> $GITHUB_ENV
          
          # Get the commit message
          commit_message=$(git log -1 --pretty=%B)
          echo "Commit message: $commit_message"
          
          # Parse current version
          IFS='.' read -r major minor patch <<< "$init_version"
          
          # Update version based on commit message
          if [[ $commit_message == *"build:"* ]]; then
              major=$((major + 1))
              minor=0
              patch=0
          elif [[ $commit_message == *"feature:"* ]]; then
              minor=$((minor + 1))
              patch=0
          elif [[ $commit_message == *"fix:"* ]]; then
              patch=$((patch + 1))
          else
              echo "No version keyword found. Using patch bump as default."
              patch=$((patch + 1))
          fi
          
          new_version="$major.$minor.$patch"
          echo "NEW_VERSION=$new_version" >> $GITHUB_ENV
          echo "New version will be: $new_version"

      - name: Update version in __init__.py
        run: |
          # Update version in __init__.py
          $init_content = Get-Content hello_world/__init__.py -Raw
          $new_init_content = $init_content -replace '__version__\s*=\s*[\'"](.+?)[\'"]', "__version__ = '$env:NEW_VERSION'"
          Set-Content hello_world/__init__.py -Value $new_init_content

      - name: Generate Wheel File
        run: |
          python setup.py bdist_wheel

      - name: Configure Git
        run: |
          git config --global user.email "priyanka.khatick@tigeranalytics.com"
          git config --global user.name "priyankakhatick97"
          
      - name: Commit and push wheel
        run: |
          git pull
          git add setup.py
          git add hello_world/__init__.py
          git add -f ./dist/*.whl
          git commit -m "Release version $env:NEW_VERSION"
          git tag -a "v$env:NEW_VERSION" -m "Version $env:NEW_VERSION"
          git push --follow-tags
